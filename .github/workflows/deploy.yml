name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DEPLOY_URL: ${{ secrets.DEPLOY_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Show local BUILD_ID (CI)
        run: |
          set -e
          echo 'Local BUILD_ID:'
          cat .next/BUILD_ID
          echo 'Local static assets count:'
          find .next/static -type f | wc -l
          echo 'Local standalone server.js:'
          test -f .next/standalone/server.js && echo 'server.js OK' || (echo 'server.js missing' && exit 1)

      - name: Create deployment archive
        run: |
          set -e
          tar -czf deploy.tgz .next/standalone .next/static .next/BUILD_ID public ecosystem.config.js

      - name: Upload archive via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          source: deploy.tgz
          target: ${{ secrets.DEPLOY_PATH }}

      - name: Unpack archive on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            set -e
            cd "${{ secrets.DEPLOY_PATH }}"
            tar -xzf deploy.tgz
            rm -f deploy.tgz
            ls -la .next || true


      - name: Verify build artifacts on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            set -e
            cd "${{ secrets.DEPLOY_PATH }}"
            echo 'Listing .next on remote:'
            ls -la .next || true
            echo 'BUILD_ID:'
            cat .next/BUILD_ID
            echo 'Check standalone server.js:'
            test -f .next/standalone/server.js && echo 'server.js OK' || (echo 'server.js missing' && exit 1)
            echo 'Static assets count:'
            find .next/static -type f | wc -l
            echo "Misplaced standalone check:"
            [ -d .next/standalone ] && echo ".next/standalone OK" || echo ".next/standalone MISSING"
            [ -d standalone ] && echo "Found ./standalone (wrong)" || true

      - name: Reload PM2 on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            set -e
            cd "${{ secrets.DEPLOY_PATH }}"
            echo 'PATH before:'
            echo "$PATH"
            echo 'Node version:'
            node -v || true
            echo 'NPM version:'
            npm -v || true
            # Try to locate pm2
            PM2_BIN=$(command -v pm2 || true)
            if [ -z "$PM2_BIN" ]; then
              PREFIX=$(npm config get prefix 2>/dev/null || echo "$HOME/.npm-global")
              export PATH="$PREFIX/bin:$PATH"
              PM2_BIN=$(command -v pm2 || true)
            fi
            if [ -z "$PM2_BIN" ] && [ -x "$HOME/.npm-global/bin/pm2" ]; then
              PM2_BIN="$HOME/.npm-global/bin/pm2"
            fi
            if [ -z "$PM2_BIN" ] && [ -x "/usr/local/bin/pm2" ]; then
              PM2_BIN="/usr/local/bin/pm2"
            fi
            if [ -z "$PM2_BIN" ]; then
              echo 'ERROR: pm2 not found in PATH or common locations.'
              echo 'Consider installing pm2 globally (npm i -g pm2) or adding it to PATH.'
              exit 1
            fi
            echo "Using PM2 at: $PM2_BIN"
            echo 'Force restart PM2 process to pick updated config:'
            "$PM2_BIN" delete gliwicka111 || true
            "$PM2_BIN" start ecosystem.config.js
            "$PM2_BIN" status || true
            echo 'Tail last pm2 logs:'
            "$PM2_BIN" logs gliwicka111 --lines 50 --nostream || true

      - name: Verify deploy URL secret
        if: ${{ env.DEPLOY_URL == '' }}
        run: |
          echo "Missing DEPLOY_URL secret"
          exit 1

      - name: Smoke test
        if: ${{ env.DEPLOY_URL != '' }}
        run: |
          set -e
          curl -fsSL "$DEPLOY_URL" | grep -qi "<html"
