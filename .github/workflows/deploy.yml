name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DEPLOY_URL: ${{ secrets.DEPLOY_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy build artifacts (standalone)
        uses: burnett01/rsync-deployments@7.0.2
        with:
          switches: -avzr --delete
          path: ".next/standalone .next/static .next/BUILD_ID public ecosystem.config.js"
          remote_path: ${{ secrets.DEPLOY_PATH }}
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_SSH_KEY }}


      - name: Verify build artifacts on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            set -e
            cd "${{ secrets.DEPLOY_PATH }}"
            echo 'Listing .next on remote:'
            ls -la .next || true
            echo 'BUILD_ID:'
            cat .next/BUILD_ID
            echo 'Check standalone server.js:'
            test -f .next/standalone/server.js && echo 'server.js OK' || (echo 'server.js missing' && exit 1)
            echo 'Static assets count:'
            find .next/static -type f | wc -l

      - name: Reload PM2 on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            set -e
            cd "${{ secrets.DEPLOY_PATH }}"
            pm2 reload ecosystem.config.js || pm2 start ecosystem.config.js

      - name: Verify deploy URL secret
        if: ${{ env.DEPLOY_URL == '' }}
        run: |
          echo "Missing DEPLOY_URL secret"
          exit 1

      - name: Smoke test
        if: ${{ env.DEPLOY_URL != '' }}
        run: |
          set -e
          curl -fsSL "$DEPLOY_URL" | grep -qi "<html"
