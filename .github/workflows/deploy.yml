name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Package artifacts
        run: |
          tar -czf app.tar.gz .next package.json next.config.mjs public

      - name: Deploy to mydevil.net
        env:
          SSH_PRIVATE_KEY: ${{ secrets.MYDEVIL_SSH_KEY }}
          MYDEVIL_USER: ${{ secrets.MYDEVIL_USER }}
          MYDEVIL_HOST: ${{ secrets.MYDEVIL_HOST }}
          MYDEVIL_PORT: ${{ secrets.MYDEVIL_PORT }}
          MYDEVIL_DOMAIN: ${{ secrets.MYDEVIL_DOMAIN }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          rsync -avz -e "ssh -p $MYDEVIL_PORT" app.tar.gz $MYDEVIL_USER@$MYDEVIL_HOST:~/app.tar.gz
          ssh -p $MYDEVIL_PORT $MYDEVIL_USER@$MYDEVIL_HOST "tar -xzf app.tar.gz -C ~/app && rm app.tar.gz && devil www restart $MYDEVIL_DOMAIN"

      - name: Verify deployment
        run: curl -f https://$MYDEVIL_DOMAIN/api/health
